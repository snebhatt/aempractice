"use client";

import "./main.css";
import {useLayoutEffect as $evhxb$useLayoutEffect, chain as $evhxb$chain, mergeProps as $evhxb$mergeProps} from "@react-aria/utils";
import $evhxb$react, {useRef as $evhxb$useRef, useCallback as $evhxb$useCallback, useImperativeHandle as $evhxb$useImperativeHandle, cloneElement as $evhxb$cloneElement, forwardRef as $evhxb$forwardRef} from "react";
import {useControlledState as $evhxb$useControlledState} from "@react-stately/utils";
import {useFormProps as $evhxb$useFormProps} from "@react-spectrum/form";
import {useProviderProps as $evhxb$useProviderProps} from "@react-spectrum/provider";
import {useTextField as $evhxb$useTextField} from "@react-aria/textfield";
import $evhxb$spectrumiconsuiAlertMedium from "@spectrum-icons/ui/AlertMedium";
import $evhxb$spectrumiconsuiCheckmarkMedium from "@spectrum-icons/ui/CheckmarkMedium";
import {createFocusableRef as $evhxb$createFocusableRef, classNames as $evhxb$classNames} from "@react-spectrum/utils";
import {Field as $evhxb$Field} from "@react-spectrum/label";
import {useFocusRing as $evhxb$useFocusRing} from "@react-aria/focus";
import {useHover as $evhxb$useHover} from "@react-aria/interactions";


function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /// <reference types="css-module-types" />
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 





var $c14528ddc146317f$exports = {};

$parcel$export($c14528ddc146317f$exports, "focus-ring", () => $c14528ddc146317f$export$f39a09f249340e2a, (v) => $c14528ddc146317f$export$f39a09f249340e2a = v);
$parcel$export($c14528ddc146317f$exports, "i18nFontFamily", () => $c14528ddc146317f$export$8c4ee2c50c22c514, (v) => $c14528ddc146317f$export$8c4ee2c50c22c514 = v);
$parcel$export($c14528ddc146317f$exports, "is-disabled", () => $c14528ddc146317f$export$d35bc1e505d1ebbf, (v) => $c14528ddc146317f$export$d35bc1e505d1ebbf = v);
$parcel$export($c14528ddc146317f$exports, "is-focused", () => $c14528ddc146317f$export$e7dc768d35940237, (v) => $c14528ddc146317f$export$e7dc768d35940237 = v);
$parcel$export($c14528ddc146317f$exports, "is-hovered", () => $c14528ddc146317f$export$b8813cd5d7824ce7, (v) => $c14528ddc146317f$export$b8813cd5d7824ce7 = v);
$parcel$export($c14528ddc146317f$exports, "is-placeholder", () => $c14528ddc146317f$export$e5b2f5233e4e5194, (v) => $c14528ddc146317f$export$e5b2f5233e4e5194 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-FocusRing-ring", () => $c14528ddc146317f$export$4109102f950813a6, (v) => $c14528ddc146317f$export$4109102f950813a6 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-FocusRing", () => $c14528ddc146317f$export$24c7f46a6e3605dd, (v) => $c14528ddc146317f$export$24c7f46a6e3605dd = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-FocusRing--quiet", () => $c14528ddc146317f$export$2927016961429360, (v) => $c14528ddc146317f$export$2927016961429360 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield", () => $c14528ddc146317f$export$2c8a10299d8b3418, (v) => $c14528ddc146317f$export$2c8a10299d8b3418 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield--invalid", () => $c14528ddc146317f$export$58e50b10d30123df, (v) => $c14528ddc146317f$export$58e50b10d30123df = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield--loadable", () => $c14528ddc146317f$export$14fd30fea6f1348c, (v) => $c14528ddc146317f$export$14fd30fea6f1348c = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield--multiline", () => $c14528ddc146317f$export$9699f1c538a448a0, (v) => $c14528ddc146317f$export$9699f1c538a448a0 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield--quiet", () => $c14528ddc146317f$export$bffd5e3d61a81737, (v) => $c14528ddc146317f$export$bffd5e3d61a81737 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield--valid", () => $c14528ddc146317f$export$c2abbc3f970170b7, (v) => $c14528ddc146317f$export$c2abbc3f970170b7 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield-circleLoader", () => $c14528ddc146317f$export$82a249fb4d6127, (v) => $c14528ddc146317f$export$82a249fb4d6127 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield-icon", () => $c14528ddc146317f$export$222d1ccd1870be1d, (v) => $c14528ddc146317f$export$222d1ccd1870be1d = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield-input", () => $c14528ddc146317f$export$1ac009feb2b0bd0c, (v) => $c14528ddc146317f$export$1ac009feb2b0bd0c = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield-inputIcon", () => $c14528ddc146317f$export$c1cdcaa5fe76a871, (v) => $c14528ddc146317f$export$c1cdcaa5fe76a871 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield-validationIcon", () => $c14528ddc146317f$export$cf0ead5b44db0da3, (v) => $c14528ddc146317f$export$cf0ead5b44db0da3 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield-wrapper", () => $c14528ddc146317f$export$dd1165e0e6012973, (v) => $c14528ddc146317f$export$dd1165e0e6012973 = v);
$parcel$export($c14528ddc146317f$exports, "spectrum-Textfield-wrapper--quiet", () => $c14528ddc146317f$export$9fcb3d6af94a9d12, (v) => $c14528ddc146317f$export$9fcb3d6af94a9d12 = v);
var $c14528ddc146317f$export$f39a09f249340e2a;
var $c14528ddc146317f$export$8c4ee2c50c22c514;
var $c14528ddc146317f$export$d35bc1e505d1ebbf;
var $c14528ddc146317f$export$e7dc768d35940237;
var $c14528ddc146317f$export$b8813cd5d7824ce7;
var $c14528ddc146317f$export$e5b2f5233e4e5194;
var $c14528ddc146317f$export$4109102f950813a6;
var $c14528ddc146317f$export$24c7f46a6e3605dd;
var $c14528ddc146317f$export$2927016961429360;
var $c14528ddc146317f$export$2c8a10299d8b3418;
var $c14528ddc146317f$export$58e50b10d30123df;
var $c14528ddc146317f$export$14fd30fea6f1348c;
var $c14528ddc146317f$export$9699f1c538a448a0;
var $c14528ddc146317f$export$bffd5e3d61a81737;
var $c14528ddc146317f$export$c2abbc3f970170b7;
var $c14528ddc146317f$export$82a249fb4d6127;
var $c14528ddc146317f$export$222d1ccd1870be1d;
var $c14528ddc146317f$export$1ac009feb2b0bd0c;
var $c14528ddc146317f$export$c1cdcaa5fe76a871;
var $c14528ddc146317f$export$cf0ead5b44db0da3;
var $c14528ddc146317f$export$dd1165e0e6012973;
var $c14528ddc146317f$export$9fcb3d6af94a9d12;
$c14528ddc146317f$export$f39a09f249340e2a = `YO3Nla_focus-ring`;
$c14528ddc146317f$export$8c4ee2c50c22c514 = `YO3Nla_i18nFontFamily`;
$c14528ddc146317f$export$d35bc1e505d1ebbf = `YO3Nla_is-disabled`;
$c14528ddc146317f$export$e7dc768d35940237 = `YO3Nla_is-focused`;
$c14528ddc146317f$export$b8813cd5d7824ce7 = `YO3Nla_is-hovered`;
$c14528ddc146317f$export$e5b2f5233e4e5194 = `YO3Nla_is-placeholder`;
$c14528ddc146317f$export$4109102f950813a6 = `YO3Nla_spectrum-FocusRing-ring`;
$c14528ddc146317f$export$24c7f46a6e3605dd = `YO3Nla_spectrum-FocusRing ${$c14528ddc146317f$export$4109102f950813a6}`;
$c14528ddc146317f$export$2927016961429360 = `YO3Nla_spectrum-FocusRing--quiet`;
$c14528ddc146317f$export$2c8a10299d8b3418 = `YO3Nla_spectrum-Textfield ${$c14528ddc146317f$export$24c7f46a6e3605dd}`;
$c14528ddc146317f$export$58e50b10d30123df = `YO3Nla_spectrum-Textfield--invalid`;
$c14528ddc146317f$export$14fd30fea6f1348c = `YO3Nla_spectrum-Textfield--loadable`;
$c14528ddc146317f$export$9699f1c538a448a0 = `YO3Nla_spectrum-Textfield--multiline`;
$c14528ddc146317f$export$bffd5e3d61a81737 = `YO3Nla_spectrum-Textfield--quiet ${$c14528ddc146317f$export$2927016961429360}`;
$c14528ddc146317f$export$c2abbc3f970170b7 = `YO3Nla_spectrum-Textfield--valid`;
$c14528ddc146317f$export$82a249fb4d6127 = `YO3Nla_spectrum-Textfield-circleLoader`;
$c14528ddc146317f$export$222d1ccd1870be1d = `YO3Nla_spectrum-Textfield-icon`;
$c14528ddc146317f$export$1ac009feb2b0bd0c = `YO3Nla_spectrum-Textfield-input ${$c14528ddc146317f$export$8c4ee2c50c22c514}`;
$c14528ddc146317f$export$c1cdcaa5fe76a871 = `YO3Nla_spectrum-Textfield-inputIcon`;
$c14528ddc146317f$export$cf0ead5b44db0da3 = `YO3Nla_spectrum-Textfield-validationIcon`;
$c14528ddc146317f$export$dd1165e0e6012973 = `YO3Nla_spectrum-Textfield-wrapper`;
$c14528ddc146317f$export$9fcb3d6af94a9d12 = `YO3Nla_spectrum-Textfield-wrapper--quiet`;




function $599adb75312e6492$var$TextFieldBase(props, ref) {
    let { validationState: validationState = props.isInvalid ? "invalid" : null, icon: icon, isQuiet: isQuiet = false, isDisabled: isDisabled, multiLine: multiLine, autoFocus: autoFocus, inputClassName: inputClassName, wrapperChildren: wrapperChildren, labelProps: labelProps, inputProps: inputProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, inputRef: userInputRef, isLoading: isLoading, loadingIndicator: loadingIndicator, validationIconClassName: validationIconClassName, disableFocusRing: disableFocusRing } = props;
    let { hoverProps: hoverProps, isHovered: isHovered } = (0, $evhxb$useHover)({
        isDisabled: isDisabled
    });
    let domRef = (0, $evhxb$useRef)(null);
    let defaultInputRef = (0, $evhxb$useRef)(null);
    let inputRef = userInputRef || defaultInputRef;
    // Expose imperative interface for ref
    (0, $evhxb$useImperativeHandle)(ref, ()=>({
            ...(0, $evhxb$createFocusableRef)(domRef, inputRef),
            select () {
                if (inputRef.current) inputRef.current.select();
            },
            getInputElement () {
                return inputRef.current;
            }
        }));
    let ElementType = multiLine ? "textarea" : "input";
    let isInvalid = validationState === "invalid" && !isDisabled;
    if (icon) {
        let UNSAFE_className = (0, $evhxb$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($c14528ddc146317f$exports))), icon.props && icon.props.UNSAFE_className, "spectrum-Textfield-icon");
        icon = /*#__PURE__*/ (0, $evhxb$cloneElement)(icon, {
            UNSAFE_className: UNSAFE_className,
            size: "S"
        });
    }
    let validationIcon = isInvalid ? /*#__PURE__*/ (0, $evhxb$react).createElement((0, $evhxb$spectrumiconsuiAlertMedium), null) : /*#__PURE__*/ (0, $evhxb$react).createElement((0, $evhxb$spectrumiconsuiCheckmarkMedium), null);
    let validation = /*#__PURE__*/ (0, $evhxb$cloneElement)(validationIcon, {
        UNSAFE_className: (0, $evhxb$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($c14528ddc146317f$exports))), "spectrum-Textfield-validationIcon", validationIconClassName)
    });
    let { focusProps: focusProps, isFocusVisible: isFocusVisible } = (0, $evhxb$useFocusRing)({
        isTextInput: true,
        autoFocus: autoFocus
    });
    let textField = /*#__PURE__*/ (0, $evhxb$react).createElement("div", {
        className: (0, $evhxb$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($c14528ddc146317f$exports))), "spectrum-Textfield", {
            "spectrum-Textfield--invalid": isInvalid,
            "spectrum-Textfield--valid": validationState === "valid" && !isDisabled,
            "spectrum-Textfield--loadable": loadingIndicator,
            "spectrum-Textfield--quiet": isQuiet,
            "spectrum-Textfield--multiline": multiLine,
            "focus-ring": !disableFocusRing && isFocusVisible
        })
    }, /*#__PURE__*/ (0, $evhxb$react).createElement(ElementType, {
        ...(0, $evhxb$mergeProps)(inputProps, hoverProps, focusProps),
        ref: inputRef,
        rows: multiLine ? 1 : undefined,
        className: (0, $evhxb$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($c14528ddc146317f$exports))), "spectrum-Textfield-input", {
            "spectrum-Textfield-inputIcon": icon,
            "is-hovered": isHovered
        }, inputClassName)
    }), icon, validationState && !isLoading && !isDisabled ? validation : null, isLoading && loadingIndicator, wrapperChildren);
    return /*#__PURE__*/ (0, $evhxb$react).createElement((0, $evhxb$Field), {
        ...props,
        labelProps: labelProps,
        descriptionProps: descriptionProps,
        errorMessageProps: errorMessageProps,
        wrapperClassName: (0, $evhxb$classNames)((0, (/*@__PURE__*/$parcel$interopDefault($c14528ddc146317f$exports))), "spectrum-Textfield-wrapper", {
            "spectrum-Textfield-wrapper--quiet": isQuiet
        }),
        showErrorIcon: false,
        ref: domRef
    }, textField);
}
const $599adb75312e6492$export$d22444a338b6e3c2 = /*#__PURE__*/ (0, $evhxb$forwardRef)($599adb75312e6492$var$TextFieldBase);






function $cc187bf91f8eea73$var$TextArea(props, ref) {
    props = (0, $evhxb$useProviderProps)(props);
    props = (0, $evhxb$useFormProps)(props);
    let { isDisabled: isDisabled = false, isQuiet: isQuiet = false, isReadOnly: isReadOnly = false, isRequired: isRequired = false, onChange: onChange, ...otherProps } = props;
    var _props_defaultValue;
    // not in stately because this is so we know when to re-measure, which is a spectrum design
    let [inputValue, setInputValue] = (0, $evhxb$useControlledState)(props.value, (_props_defaultValue = props.defaultValue) !== null && _props_defaultValue !== void 0 ? _props_defaultValue : "", ()=>{});
    let inputRef = (0, $evhxb$useRef)(null);
    let onHeightChange = (0, $evhxb$useCallback)(()=>{
        // Quiet textareas always grow based on their text content.
        // Standard textareas also grow by default, unless an explicit height is set.
        if ((isQuiet || !props.height) && inputRef.current) {
            let input = inputRef.current;
            let prevAlignment = input.style.alignSelf;
            let prevOverflow = input.style.overflow;
            // Firefox scroll position is lost when overflow: 'hidden' is applied so we skip applying it.
            // The measure/applied height is also incorrect/reset if we turn on and off
            // overflow: hidden in Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1787062
            let isFirefox = "MozAppearance" in input.style;
            if (!isFirefox) input.style.overflow = "hidden";
            input.style.alignSelf = "start";
            input.style.height = "auto";
            // offsetHeight - clientHeight accounts for the border/padding.
            input.style.height = `${input.scrollHeight + (input.offsetHeight - input.clientHeight)}px`;
            input.style.overflow = prevOverflow;
            input.style.alignSelf = prevAlignment;
        }
    }, [
        isQuiet,
        inputRef,
        props.height
    ]);
    (0, $evhxb$useLayoutEffect)(()=>{
        if (inputRef.current) onHeightChange();
    }, [
        onHeightChange,
        inputValue,
        inputRef
    ]);
    if (props.placeholder) console.warn("Placeholders are deprecated due to accessibility issues. Please use help text instead. See the docs for details: https://react-spectrum.adobe.com/react-spectrum/TextArea.html#help-text");
    let result = (0, $evhxb$useTextField)({
        ...props,
        onChange: (0, $evhxb$chain)(onChange, setInputValue),
        inputElementType: "textarea"
    }, inputRef);
    return /*#__PURE__*/ (0, $evhxb$react).createElement((0, $599adb75312e6492$export$d22444a338b6e3c2), {
        ...otherProps,
        ref: ref,
        inputRef: inputRef,
        ...result,
        multiLine: true,
        isDisabled: isDisabled,
        isQuiet: isQuiet,
        isReadOnly: isReadOnly,
        isRequired: isRequired
    });
}
/**
 * TextAreas are multiline text inputs, useful for cases where users have
 * a sizable amount of text to enter. They allow for all customizations that
 * are available to text fields.
 */ let $cc187bf91f8eea73$export$f5c9f3c2c4054eec = /*#__PURE__*/ (0, $evhxb$react).forwardRef($cc187bf91f8eea73$var$TextArea);


/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 




function $265457f9427aa380$var$TextField(props, ref) {
    props = (0, $evhxb$useProviderProps)(props);
    props = (0, $evhxb$useFormProps)(props);
    let inputRef = (0, $evhxb$useRef)(null);
    let result = (0, $evhxb$useTextField)(props, inputRef);
    if (props.placeholder) console.warn("Placeholders are deprecated due to accessibility issues. Please use help text instead. See the docs for details: https://react-spectrum.adobe.com/react-spectrum/TextField.html#help-text");
    return /*#__PURE__*/ (0, $evhxb$react).createElement((0, $599adb75312e6492$export$d22444a338b6e3c2), {
        ...props,
        ...result,
        ref: ref,
        inputRef: inputRef
    });
}
/**
 * TextFields are text inputs that allow users to input custom text entries
 * with a keyboard. Various decorations can be displayed around the field to
 * communicate the entry requirements.
 */ const $265457f9427aa380$export$2c73285ae9390cec = /*#__PURE__*/ (0, $evhxb$forwardRef)($265457f9427aa380$var$TextField);





export {$cc187bf91f8eea73$export$f5c9f3c2c4054eec as TextArea, $265457f9427aa380$export$2c73285ae9390cec as TextField, $599adb75312e6492$export$d22444a338b6e3c2 as TextFieldBase};
//# sourceMappingURL=module.js.map
