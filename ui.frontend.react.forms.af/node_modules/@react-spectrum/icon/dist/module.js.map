{"mappings":"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","sources":["packages/@react-spectrum/icon/src/index.ts","packages/@react-spectrum/icon/src/Icon.tsx","packages/@adobe/spectrum-css-temp/components/icon/vars.css","packages/@react-spectrum/icon/src/UIIcon.tsx","packages/@react-spectrum/icon/src/Illustration.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/// <reference types=\"css-module-types\" />\n\nexport {Icon} from './Icon';\nexport {UIIcon} from './UIIcon';\nexport {Illustration} from './Illustration';\n\nexport type {IconProps, IconPropsWithoutChildren} from './Icon';\nexport type {IllustrationProps, IllustrationPropsWithoutChildren} from './Illustration';\nexport type {UIIconProps, UIIconPropsWithoutChildren} from './UIIcon';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, IconColorValue, StyleProps} from '@react-types/shared';\nimport {baseStyleProps, classNames, StyleHandlers, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/icon/vars.css';\nimport {useProvider} from '@react-spectrum/provider';\n\nexport interface IconProps extends DOMProps, AriaLabelingProps, StyleProps {\n  /**\n   * A screen reader only label for the Icon.\n   */\n  'aria-label'?: string,\n  /**\n   * The content to display. Should be an SVG.\n   */\n  children: ReactElement,\n  /**\n   * Size of Icon (changes based on scale).\n   */\n  size?: 'XXS' | 'XS' | 'S' | 'M' | 'L' |'XL' | 'XXL',\n  /**\n   * A slot to place the icon in.\n   * @default 'icon'\n   */\n  slot?: string,\n  /**\n   * Indicates whether the element is exposed to an accessibility API.\n   */\n  'aria-hidden'?: boolean | 'false' | 'true',\n  /**\n   * Color of the Icon.\n   */\n  color?: IconColorValue\n}\n\nexport type IconPropsWithoutChildren = Omit<IconProps, 'children'>;\n\nfunction iconColorValue(value: IconColorValue) {\n  return `var(--spectrum-semantic-${value}-color-icon)`;\n}\n\nconst iconStyleProps: StyleHandlers = {\n  ...baseStyleProps,\n  color: ['color', iconColorValue]\n};\n\n/**\n * Spectrum icons are clear, minimal, and consistent across platforms. They follow the focused and rational principles of the design system in both metaphor and style.\n */\nexport function Icon(props: IconProps) {\n  props = useSlotProps(props, 'icon');\n  let {\n    children,\n    size,\n    'aria-label': ariaLabel,\n    'aria-hidden': ariaHidden,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps, iconStyleProps);\n\n  let provider = useProvider();\n  let scale = 'M';\n  if (provider !== null) {\n    scale = provider.scale === 'large' ? 'L' : 'M';\n  }\n  if (!ariaHidden) {\n    ariaHidden = undefined;\n  }\n\n  // Use user specified size, falling back to provider scale if size is undef\n  let iconSize = size ? size : scale;\n\n  return React.cloneElement(children, {\n    ...filterDOMProps(otherProps),\n    ...styleProps,\n    focusable: 'false',\n    'aria-label': ariaLabel,\n    'aria-hidden': (ariaLabel ? (ariaHidden || undefined) : true),\n    role: 'img',\n    className: classNames(\n      styles,\n      children.props.className,\n      'spectrum-Icon',\n      `spectrum-Icon--size${iconSize}`,\n      styleProps.className)\n  });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, StyleProps} from '@react-types/shared';\nimport {classNames, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/icon/vars.css';\nimport {useProvider} from '@react-spectrum/provider';\n\nexport interface UIIconProps extends DOMProps, AriaLabelingProps, StyleProps {\n  children: ReactElement,\n  slot?: string,\n  /**\n   * Indicates whether the element is exposed to an accessibility API.\n   */\n  'aria-hidden'?: boolean | 'false' | 'true'\n}\n\nexport type UIIconPropsWithoutChildren = Omit<UIIconProps, 'children'>;\n\nexport function UIIcon(props: UIIconProps) {\n  props = useSlotProps(props, 'icon');\n  let {\n    children,\n    'aria-label': ariaLabel,\n    'aria-hidden': ariaHidden,\n    ...otherProps\n  } = props;\n\n  let {styleProps} = useStyleProps(otherProps);\n  let provider = useProvider();\n  let scale = 'M';\n  if (provider !== null) {\n    scale = provider.scale === 'large' ? 'L' : 'M';\n  }\n\n  if (!ariaHidden) {\n    ariaHidden = undefined;\n  }\n\n  return React.cloneElement(children, {\n    ...filterDOMProps(otherProps),\n    ...styleProps,\n    scale,\n    focusable: 'false',\n    'aria-label': ariaLabel,\n    'aria-hidden': (ariaLabel ? (ariaHidden || undefined) : true),\n    role: 'img',\n    className: classNames(\n      styles,\n      children.props.className,\n      'spectrum-Icon',\n      {\n        [`spectrum-UIIcon-${children.type['displayName']}`]: children.type['displayName']\n      },\n      styleProps.className)\n  });\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMProps, StyleProps} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {ReactElement} from 'react';\nimport {useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nexport interface IllustrationProps extends DOMProps, AriaLabelingProps, StyleProps {\n  /**\n   * A screen reader only label for the Illustration.\n   */\n  'aria-label'?: string,\n  /**\n   * The content to display. Should be an SVG.\n   */\n  children: ReactElement,\n  /**\n   * A slot to place the illustration in.\n   * @default 'illustration'\n   */\n  slot?: string,\n  /**\n   * Indicates whether the element is exposed to an accessibility API.\n   */\n  'aria-hidden'?: boolean | 'false' | 'true'\n}\n\nexport type IllustrationPropsWithoutChildren = Omit<IllustrationProps, 'children'>;\n\n/**\n * Wrapper component for illustrations. Use this to wrap your svg element for a custom illustration.\n */\nexport function Illustration(props: IllustrationProps) {\n  props = useSlotProps(props, 'illustration');\n  let {\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-hidden': ariaHidden,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n\n  let hasLabel = ariaLabel || ariaLabelledby;\n\n  if (!ariaHidden) {\n    ariaHidden = undefined;\n  }\n\n  return React.cloneElement(children, {\n    ...filterDOMProps(otherProps),\n    ...styleProps,\n    focusable: 'false',\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    'aria-hidden': ariaHidden,\n    role: hasLabel ? 'img' : undefined\n  });\n}\n"],"names":[],"version":3,"file":"module.js.map"}