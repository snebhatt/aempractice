import Container from './Container';
import { ContainerModel, FieldJson, FieldModel, FieldsetJson, FieldsetModel, FormModel } from './types';
/**
 * Creates a child model inside the given parent
 * @param child
 * @param options
 * @private
 */
export declare const createChild: (child: FieldsetJson | FieldJson, options: {
    form: FormModel;
    parent: ContainerModel;
}) => FieldModel | FieldsetModel;
/**
 * Defines a field set class which extends from {@link Container | container}
 */
export declare class Fieldset extends Container<FieldsetJson> implements FieldsetModel {
    /**
     * @param params
     * @param _options
     * @private
     */
    constructor(params: FieldsetJson, _options: {
        form: FormModel;
        parent: ContainerModel;
    });
    private _applyDefaults;
    get type(): "array" | "object" | undefined;
    protected _createChild(child: FieldsetJson | FieldJson, options: any): FieldModel | FieldsetModel;
    get items(): (FieldModel | FieldsetModel)[];
    get value(): null;
}
