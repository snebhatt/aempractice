/**
 * Defines generic utilities to translated form model definition
 */
import { FieldJson, FieldsetJson, FormJson } from '../types';
/** Token used while creating translation specific properties from `adaptive form specification` */
export declare const TRANSLATION_TOKEN = "##";
/** Name of the object which holds all translation specific properties */
export declare const TRANSLATION_ID = "afs:translationIds";
export declare const CUSTOM_PROPS_KEY = "properties";
declare type formElementJson = FieldJson | FieldsetJson | FormJson | any;
/**
 * @private
 */
export declare const invalidateTranslation: (input: formElementJson, updates: any) => void;
/**
 * @private
 */
export declare const addTranslationId: (input: formElementJson, additionalTranslationProps?: string[]) => formElementJson;
/**
 * @param input
 * @param additionalTranslationProps
 * @private
 */
export declare const createTranslationObj: (input: formElementJson, additionalTranslationProps?: string[]) => any;
/**
 * Creates translation object with [BCP 47](https://tools.ietf.org/search/bcp47) language tags as key and value is a translation object. Key of translation object is
 * generated based on the form hierarchy and it is separated by "##" token to signify that the id is machine generated (ie its not a human generated string)
 * @param input             form model definition
 * @param additionalTranslationProps    optional properties which needs to be translated, by default, only OOTB properties of form model definition is translated
 * @param bcp47LangTags     optional additional language tags
 * @returns translation object for each bcp 47 language tag
 */
export declare const createTranslationObject: (input: formElementJson, additionalTranslationProps?: string[], bcp47LangTags?: string[]) => any;
export {};
