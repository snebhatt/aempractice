/**
 * Defines event queue and event node
 */
import { Action, BaseJson } from '../types';
import { BaseNode } from '../BaseNode';
import { Logger } from '../Form';
/**
 * Implementation of event queue. When a user event, like change or click, is captured the expression to be evaluated
 * must be put in an Event Queue and then evaluated.
 * @private
 */
declare class EventQueue {
    private logger;
    private _runningEventCount;
    private _isProcessing;
    private _pendingEvents;
    constructor(logger?: Logger);
    get length(): number;
    get isProcessing(): boolean;
    isQueued<T extends BaseJson>(node: BaseNode<T>, event: Action): boolean;
    queue<T extends BaseJson>(node: BaseNode<T>, events: Action | Action[], priority?: boolean): void;
    runPendingQueue(): void;
}
export default EventQueue;
