import { FieldJson, State } from '@aemforms/af-core';
import { JSXElementConstructor } from 'react';
import { Handlers } from './useRuleEngine';
export declare type Convertor<T> = (props: T, handlers: Handlers, localizedProperty: (propName: string) => string) => any;
export declare const translateMessage: (obj: any, formatMessage: any) => (propName: string) => any;
export declare const useFormIntl: () => any;
/**
 * Binds the component to the Form element whose state is being provided
 * @param formFieldState  The state of the Field received from Adaptive Form Component
 * @param propsMapper Mapping Field State to Props of the component
 * @param Component The component to render.
 * @param wrap
 */
export declare const useRenderer: (formFieldState: State<FieldJson>, Component: JSXElementConstructor<any>, propsMapper?: Convertor<any>, wrap?: boolean) => JSX.Element;
