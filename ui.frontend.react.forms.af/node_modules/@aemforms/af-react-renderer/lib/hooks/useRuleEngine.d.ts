import { State } from '@aemforms/af-core';
export declare type Dispatch<T> = (x?: T) => any;
export declare type Handlers = {
    dispatchBlur: Dispatch<any>;
    dispatchChange: Dispatch<any>;
    dispatchClick: Dispatch<void>;
    dispatchAddItem: Dispatch<number>;
    dispatchRemoveItem: Dispatch<number>;
    formatMessage?: any;
};
/**
 * Binds the component's state to the Form and dynamically changing it depending upon
 * the rules written for that Field in the Form
 * @param props
 */
export declare const useRuleEngine: <P>(props: State<P>) => [any, Handlers];
export declare const useFocus: <P>(props: State<P>) => ((node: any) => void)[];
/**
 * React hook to get the previous state
 * @param value
 */
export declare const usePrevious: (value: any) => undefined;
