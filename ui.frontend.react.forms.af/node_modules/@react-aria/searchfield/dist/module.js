import $03c9a1a10de12f06$exports from "./ar-AE.module.js";
import $4da0c2ffa4ba4159$exports from "./bg-BG.module.js";
import $8c59fd0c2c96821b$exports from "./cs-CZ.module.js";
import $0a371f9c1df8120f$exports from "./da-DK.module.js";
import $67f4d0b0de9f8a52$exports from "./de-DE.module.js";
import $72a312d948f0214b$exports from "./el-GR.module.js";
import $5012d21d933388c1$exports from "./en-US.module.js";
import $0159854399308e2e$exports from "./es-ES.module.js";
import $390613981d970276$exports from "./et-EE.module.js";
import $961ae0833f811705$exports from "./fi-FI.module.js";
import $26d76742decfd829$exports from "./fr-FR.module.js";
import $92ef254c82a5c769$exports from "./he-IL.module.js";
import $e0321b43bdefb8b3$exports from "./hr-HR.module.js";
import $0c1ee0b8d50940d9$exports from "./hu-HU.module.js";
import $b09198915a38946f$exports from "./it-IT.module.js";
import $3a9a3d180c3145c0$exports from "./ja-JP.module.js";
import $b7a611726449f4a3$exports from "./ko-KR.module.js";
import $d9a3d49db610dd5c$exports from "./lt-LT.module.js";
import $3ab64b73ea27c23a$exports from "./lv-LV.module.js";
import $bf5cce1b47d23baf$exports from "./nb-NO.module.js";
import $4e0c9a9a010e4598$exports from "./nl-NL.module.js";
import $63cf4a75ec270508$exports from "./pl-PL.module.js";
import $083b0cad27fdbd06$exports from "./pt-BR.module.js";
import $1b7f0864d830ba6d$exports from "./pt-PT.module.js";
import $d6d2588377fc9718$exports from "./ro-RO.module.js";
import $701c918a4653e946$exports from "./ru-RU.module.js";
import $7cacc29a1e5f4fbe$exports from "./sk-SK.module.js";
import $c63231bcc300d0df$exports from "./sl-SI.module.js";
import $b61510478bc0e6f6$exports from "./sr-SP.module.js";
import $ce325e6dd3f9c37a$exports from "./sv-SE.module.js";
import $1f7e1cf2285af2b2$exports from "./tr-TR.module.js";
import $2d999353ca652e34$exports from "./uk-UA.module.js";
import $117b536bfb1ae554$exports from "./zh-CN.module.js";
import $525f6fa4ac26e278$exports from "./zh-TW.module.js";
import {chain as $2Ol32$chain} from "@react-aria/utils";
import {useLocalizedStringFormatter as $2Ol32$useLocalizedStringFormatter} from "@react-aria/i18n";
import {useTextField as $2Ol32$useTextField} from "@react-aria/textfield";


function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ /*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 
var $8112f8b883c0272d$exports = {};


































$8112f8b883c0272d$exports = {
    "ar-AE": $03c9a1a10de12f06$exports,
    "bg-BG": $4da0c2ffa4ba4159$exports,
    "cs-CZ": $8c59fd0c2c96821b$exports,
    "da-DK": $0a371f9c1df8120f$exports,
    "de-DE": $67f4d0b0de9f8a52$exports,
    "el-GR": $72a312d948f0214b$exports,
    "en-US": $5012d21d933388c1$exports,
    "es-ES": $0159854399308e2e$exports,
    "et-EE": $390613981d970276$exports,
    "fi-FI": $961ae0833f811705$exports,
    "fr-FR": $26d76742decfd829$exports,
    "he-IL": $92ef254c82a5c769$exports,
    "hr-HR": $e0321b43bdefb8b3$exports,
    "hu-HU": $0c1ee0b8d50940d9$exports,
    "it-IT": $b09198915a38946f$exports,
    "ja-JP": $3a9a3d180c3145c0$exports,
    "ko-KR": $b7a611726449f4a3$exports,
    "lt-LT": $d9a3d49db610dd5c$exports,
    "lv-LV": $3ab64b73ea27c23a$exports,
    "nb-NO": $bf5cce1b47d23baf$exports,
    "nl-NL": $4e0c9a9a010e4598$exports,
    "pl-PL": $63cf4a75ec270508$exports,
    "pt-BR": $083b0cad27fdbd06$exports,
    "pt-PT": $1b7f0864d830ba6d$exports,
    "ro-RO": $d6d2588377fc9718$exports,
    "ru-RU": $701c918a4653e946$exports,
    "sk-SK": $7cacc29a1e5f4fbe$exports,
    "sl-SI": $c63231bcc300d0df$exports,
    "sr-SP": $b61510478bc0e6f6$exports,
    "sv-SE": $ce325e6dd3f9c37a$exports,
    "tr-TR": $1f7e1cf2285af2b2$exports,
    "uk-UA": $2d999353ca652e34$exports,
    "zh-CN": $117b536bfb1ae554$exports,
    "zh-TW": $525f6fa4ac26e278$exports
};




function $4d52238874b24f86$export$9bb30bbe003b82e0(props, state, inputRef) {
    let stringFormatter = (0, $2Ol32$useLocalizedStringFormatter)((0, (/*@__PURE__*/$parcel$interopDefault($8112f8b883c0272d$exports))), "@react-aria/searchfield");
    let { isDisabled: isDisabled, isReadOnly: isReadOnly, onSubmit: onSubmit = ()=>{}, onClear: onClear, type: type = "search" } = props;
    let onKeyDown = (e)=>{
        const key = e.key;
        if (key === "Enter") e.preventDefault();
        if (isDisabled || isReadOnly) return;
        if (key === "Enter") onSubmit(state.value);
        if (key === "Escape") {
            if (state.value === "") e.continuePropagation();
            else {
                state.setValue("");
                if (onClear) onClear();
            }
        }
    };
    let onClearButtonClick = ()=>{
        state.setValue("");
        if (onClear) onClear();
    };
    let onPressStart = ()=>{
        var // this is in PressStart for mobile so that touching the clear button doesn't remove focus from
        // the input and close the keyboard
        _inputRef_current;
        (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();
    };
    let { labelProps: labelProps, inputProps: inputProps, descriptionProps: descriptionProps, errorMessageProps: errorMessageProps, ...validation } = (0, $2Ol32$useTextField)({
        ...props,
        value: state.value,
        onChange: state.setValue,
        onKeyDown: !isReadOnly ? (0, $2Ol32$chain)(onKeyDown, props.onKeyDown) : props.onKeyDown,
        type: type
    }, inputRef);
    return {
        labelProps: labelProps,
        inputProps: {
            ...inputProps,
            // already handled by useSearchFieldState
            defaultValue: undefined
        },
        clearButtonProps: {
            "aria-label": stringFormatter.format("Clear search"),
            excludeFromTabOrder: true,
            // @ts-ignore
            preventFocusOnPress: true,
            isDisabled: isDisabled || isReadOnly,
            onPress: onClearButtonClick,
            onPressStart: onPressStart
        },
        descriptionProps: descriptionProps,
        errorMessageProps: errorMessageProps,
        ...validation
    };
}




export {$4d52238874b24f86$export$9bb30bbe003b82e0 as useSearchField};
//# sourceMappingURL=module.js.map
