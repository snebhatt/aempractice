{"mappings":"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","sources":["packages/@react-aria/virtualizer/src/index.ts","packages/@react-aria/virtualizer/src/Virtualizer.tsx","packages/@react-aria/virtualizer/src/ScrollView.tsx","packages/@react-aria/virtualizer/src/utils.ts","packages/@react-aria/virtualizer/src/VirtualizerItem.tsx","packages/@react-aria/virtualizer/src/useVirtualizerItem.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {RTLOffsetType} from './utils';\nexport type {VirtualizerItemOptions} from './useVirtualizerItem';\nexport {useVirtualizer, Virtualizer} from './Virtualizer';\nexport {useVirtualizerItem} from './useVirtualizerItem';\nexport {VirtualizerItem, layoutInfoToStyle} from './VirtualizerItem';\nexport {ScrollView} from './ScrollView';\nexport {getRTLOffsetType, getScrollLeft, setScrollLeft} from './utils';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Key} from '@react-types/shared';\nimport {getInteractionModality} from '@react-aria/interactions';\nimport {Layout, Rect, ReusableView, useVirtualizerState, VirtualizerState} from '@react-stately/virtualizer';\nimport {mergeProps, useLayoutEffect} from '@react-aria/utils';\nimport React, {FocusEvent, HTMLAttributes, ReactElement, ReactNode, RefObject, useCallback, useEffect, useMemo, useRef} from 'react';\nimport {ScrollView} from './ScrollView';\nimport {VirtualizerItem} from './VirtualizerItem';\n\ninterface VirtualizerProps<T extends object, V> extends Omit<HTMLAttributes<HTMLElement>, 'children'> {\n  children: (type: string, content: T) => V,\n  renderWrapper?: (\n    parent: ReusableView<T, V> | null,\n    reusableView: ReusableView<T, V>,\n    children: ReusableView<T, V>[],\n    renderChildren: (views: ReusableView<T, V>[]) => ReactElement[]\n  ) => ReactElement,\n  layout: Layout<T>,\n  collection: Collection<T>,\n  focusedKey?: Key,\n  sizeToFit?: 'width' | 'height',\n  scrollDirection?: 'horizontal' | 'vertical' | 'both',\n  transitionDuration?: number,\n  isLoading?: boolean,\n  onLoadMore?: () => void,\n  shouldUseVirtualFocus?: boolean,\n  scrollToItem?: (key: Key) => void,\n  autoFocus?: boolean\n}\n\nfunction Virtualizer<T extends object, V extends ReactNode>(props: VirtualizerProps<T, V>, ref: RefObject<HTMLDivElement>) {\n  let {\n    children: renderView,\n    renderWrapper,\n    layout,\n    collection,\n    sizeToFit,\n    scrollDirection,\n    transitionDuration,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isLoading,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onLoadMore,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusedKey,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    shouldUseVirtualFocus,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    scrollToItem,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    autoFocus,\n    ...otherProps\n  } = props;\n\n  let fallbackRef = useRef<HTMLDivElement>();\n  ref = ref || fallbackRef;\n\n  let state = useVirtualizerState({\n    transitionDuration,\n    layout,\n    collection,\n    renderView,\n    renderWrapper: renderWrapper || defaultRenderWrapper,\n    onVisibleRectChange(rect) {\n      ref.current.scrollLeft = rect.x;\n      ref.current.scrollTop = rect.y;\n    }\n  });\n\n  let {virtualizerProps, scrollViewProps} = useVirtualizer(props, state, ref);\n\n  return (\n    <ScrollView\n      {...mergeProps(otherProps, virtualizerProps, scrollViewProps)}\n      ref={ref}\n      innerStyle={state.isAnimating ? {transition: `none ${state.virtualizer.transitionDuration}ms`} : undefined}\n      contentSize={state.contentSize}\n      onScrollStart={state.startScrolling}\n      onScrollEnd={state.endScrolling}\n      sizeToFit={sizeToFit}\n      scrollDirection={scrollDirection}>\n      {state.visibleViews}\n    </ScrollView>\n  );\n}\n\ninterface VirtualizerOptions {\n  tabIndex?: number,\n  focusedKey?: Key,\n  scrollToItem?: (key: Key) => void,\n  shouldUseVirtualFocus?: boolean,\n  autoFocus?: boolean,\n  isLoading?: boolean,\n  onLoadMore?: () => void\n}\n\nexport function useVirtualizer<T extends object, V extends ReactNode, W>(props: VirtualizerOptions, state: VirtualizerState<T, V, W>, ref: RefObject<HTMLElement>) {\n  let {focusedKey, scrollToItem, shouldUseVirtualFocus, isLoading, onLoadMore} = props;\n  let {virtualizer} = state;\n  // Scroll to the focusedKey when it changes. Actually focusing the focusedKey\n  // is up to the implementation using Virtualizer since we don't have refs\n  // to all of the item DOM nodes.\n  let lastFocusedKey = useRef(null);\n  let isFocusWithin = useRef(false);\n  let autoFocus = useRef(props.autoFocus);\n  useEffect(() => {\n    if (virtualizer.visibleRect.height === 0) {\n      return;\n    }\n\n    // Only scroll the focusedKey into view if the modality is not pointer to avoid jumps in position when clicking/pressing tall items.\n    let modality = getInteractionModality();\n    if (focusedKey !== lastFocusedKey.current && (modality !== 'pointer' || autoFocus.current)) {\n      autoFocus.current = false;\n      if (scrollToItem) {\n        // If user provides scrolltoitem, then it is their responsibility to call scrollIntoViewport if desired\n        // since we don't know if their scrollToItem may take some time to actually bring the active element into the virtualizer's visible rect.\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {duration: 0});\n\n      }\n    }\n\n    lastFocusedKey.current = focusedKey;\n  }, [focusedKey, virtualizer.visibleRect.height, virtualizer, lastFocusedKey, scrollToItem, ref]);\n\n  // Persist the focusedKey and prevent it from being removed from the DOM when scrolled out of view.\n  virtualizer.persistedKeys = useMemo(() => focusedKey ? new Set([focusedKey]) : new Set(), [focusedKey]);\n\n  let onFocus = useCallback((e: FocusEvent) => {\n    // If the focused item is scrolled out of view and is not in the DOM, the collection\n    // will have tabIndex={0}. When tabbing in from outside, scroll the focused item into view.\n    // Ignore focus events that bubble through portals (e.g. focus that happens on a menu popover child of the virtualizer)\n    // Don't scroll focused key into view if modality is pointer to prevent sudden jump in position (e.g. CardView).\n    let modality = getInteractionModality();\n    if (!isFocusWithin.current && ref.current.contains(e.target) && modality !== 'pointer') {\n      if (scrollToItem) {\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {duration: 0});\n      }\n    }\n\n    isFocusWithin.current = e.target !== ref.current;\n  }, [ref, virtualizer, focusedKey, scrollToItem]);\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    isFocusWithin.current = ref.current.contains(e.relatedTarget as Element);\n  }, [ref]);\n\n  // Set tabIndex to -1 if there is a focused key, otherwise 0 so that the collection\n  // itself is tabbable. When the collection receives focus, we scroll the focused item back into\n  // view, which will allow it to be properly focused. If using virtual focus, don't set a\n  // tabIndex at all so that VoiceOver on iOS 14 doesn't try to move real DOM focus to the element anyway.\n  let tabIndex: number;\n  if (!shouldUseVirtualFocus) {\n    // When there is no focusedKey the default tabIndex is 0. We include logic for empty collections too.\n    // For collections that are empty, but have a link in the empty children we want to skip focusing this\n    // and let focus move to the link similar to link moving to children.\n    tabIndex = focusedKey != null ? -1 : 0;\n\n    // If the collection is empty, we want the tabIndex provided from props (if any)\n    // so that we handle when tabbable items are added to the empty state.\n    if (virtualizer.collection.size === 0 && props.tabIndex != null) {\n      tabIndex = props.tabIndex;\n    }\n  }\n\n  // Handle scrolling, and call onLoadMore when nearing the bottom.\n  let isLoadingRef = useRef(isLoading);\n  let prevProps = useRef(props);\n  let onVisibleRectChange = useCallback((rect: Rect) => {\n    state.setVisibleRect(rect);\n\n    if (!isLoadingRef.current && onLoadMore) {\n      let scrollOffset = state.virtualizer.contentSize.height - rect.height * 2;\n      if (rect.y > scrollOffset) {\n        isLoadingRef.current = true;\n        onLoadMore();\n      }\n    }\n  }, [onLoadMore, state]);\n\n  let lastContentSize = useRef(0);\n  useLayoutEffect(() => {\n    // If animating, wait until we're done.\n    if (state.isAnimating) {\n      return;\n    }\n\n    // Only update isLoadingRef if props object actually changed,\n    // not if a local state change occurred.\n    let wasLoading = isLoadingRef.current;\n    if (props !== prevProps.current) {\n      isLoadingRef.current = isLoading;\n      prevProps.current = props;\n    }\n\n    let shouldLoadMore = !isLoadingRef.current\n      && onLoadMore\n      && state.contentSize.height > 0\n      && state.contentSize.height <= state.virtualizer.visibleRect.height\n      // Only try loading more if the content size changed, or if we just finished\n      // loading and still have room for more items.\n      && (wasLoading || state.contentSize.height !== lastContentSize.current);\n\n    if (shouldLoadMore) {\n      isLoadingRef.current = true;\n      onLoadMore();\n    }\n    lastContentSize.current = state.contentSize.height;\n  }, [state.contentSize, state.isAnimating, state.virtualizer, isLoading, onLoadMore, props]);\n\n  return {\n    virtualizerProps: {\n      tabIndex,\n      onFocus,\n      onBlur\n    },\n    scrollViewProps: {\n      onVisibleRectChange\n    }\n  };\n}\n\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst _Virtualizer = React.forwardRef(Virtualizer) as <T extends object, V>(props: VirtualizerProps<T, V> & {ref?: RefObject<HTMLDivElement>}) => ReactElement;\nexport {_Virtualizer as Virtualizer};\n\nfunction defaultRenderWrapper<T extends object, V extends ReactNode>(\n  parent: ReusableView<T, V> | null,\n  reusableView: ReusableView<T, V>\n) {\n  return (\n    <VirtualizerItem\n      key={reusableView.key}\n      layoutInfo={reusableView.layoutInfo}\n      virtualizer={reusableView.virtualizer}\n      parent={parent?.layoutInfo}>\n      {reusableView.rendered}\n    </VirtualizerItem>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport {flushSync} from 'react-dom';\nimport {getScrollLeft} from './utils';\nimport React, {\n  CSSProperties,\n  HTMLAttributes,\n  ReactNode,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {Rect, Size} from '@react-stately/virtualizer';\nimport {useLayoutEffect, useResizeObserver} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface ScrollViewProps extends HTMLAttributes<HTMLElement> {\n  contentSize: Size,\n  onVisibleRectChange: (rect: Rect) => void,\n  children: ReactNode,\n  innerStyle?: CSSProperties,\n  sizeToFit?: 'width' | 'height',\n  onScrollStart?: () => void,\n  onScrollEnd?: () => void,\n  scrollDirection?: 'horizontal' | 'vertical' | 'both'\n}\n\nlet isOldReact = React.version.startsWith('16.') || React.version.startsWith('17.');\n\nfunction ScrollView(props: ScrollViewProps, ref: RefObject<HTMLDivElement>) {\n  let {\n    contentSize,\n    onVisibleRectChange,\n    children,\n    innerStyle,\n    sizeToFit,\n    onScrollStart,\n    onScrollEnd,\n    scrollDirection = 'both',\n    ...otherProps\n  } = props;\n\n  let defaultRef = useRef();\n  ref = ref || defaultRef;\n  let state = useRef({\n    scrollTop: 0,\n    scrollLeft: 0,\n    scrollEndTime: 0,\n    scrollTimeout: null,\n    width: 0,\n    height: 0,\n    isScrolling: false\n  }).current;\n  let {direction} = useLocale();\n\n  let [isScrolling, setScrolling] = useState(false);\n  let onScroll = useCallback((e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (props.onScroll) {\n      props.onScroll(e);\n    }\n\n    flushSync(() => {\n      let scrollTop = e.currentTarget.scrollTop;\n      let scrollLeft = getScrollLeft(e.currentTarget, direction);\n\n      // Prevent rubber band scrolling from shaking when scrolling out of bounds\n      state.scrollTop = Math.max(0, Math.min(scrollTop, contentSize.height - state.height));\n      state.scrollLeft = Math.max(0, Math.min(scrollLeft, contentSize.width - state.width));\n\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, state.width, state.height));\n\n      if (!state.isScrolling) {\n        state.isScrolling = true;\n        setScrolling(true);\n\n        if (onScrollStart) {\n          onScrollStart();\n        }\n      }\n\n      // So we don't constantly call clearTimeout and setTimeout,\n      // keep track of the current timeout time and only reschedule\n      // the timer when it is getting close.\n      let now = Date.now();\n      if (state.scrollEndTime <= now + 50) {\n        state.scrollEndTime = now + 300;\n\n        clearTimeout(state.scrollTimeout);\n        state.scrollTimeout = setTimeout(() => {\n          state.isScrolling = false;\n          setScrolling(false);\n          state.scrollTimeout = null;\n\n          if (onScrollEnd) {\n            onScrollEnd();\n          }\n        }, 300);\n      }\n    });\n  }, [props, direction, state, contentSize, onVisibleRectChange, onScrollStart, onScrollEnd]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      clearTimeout(state.scrollTimeout);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let updateSize = useCallback(() => {\n    let dom = ref.current;\n    if (!dom) {\n      return;\n    }\n\n    let w = dom.clientWidth;\n    let h = dom.clientHeight;\n    if (sizeToFit && contentSize.width > 0 && contentSize.height > 0) {\n      if (sizeToFit === 'width') {\n        w = Math.min(w, contentSize.width);\n      } else if (sizeToFit === 'height') {\n        h = Math.min(h, contentSize.height);\n      }\n    }\n\n    if (state.width !== w || state.height !== h) {\n      state.width = w;\n      state.height = h;\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, w, h));\n    }\n  }, [onVisibleRectChange, ref, state, sizeToFit, contentSize]);\n\n  useLayoutEffect(() => {\n    updateSize();\n  }, [updateSize]);\n  let raf = useRef<ReturnType<typeof requestAnimationFrame> | null>();\n  let onResize = () => {\n    if (isOldReact) {\n      raf.current ??= requestAnimationFrame(() => {\n        updateSize();\n        raf.current = null;\n      });\n    } else {\n      updateSize();\n    }\n  };\n  useResizeObserver({ref, onResize});\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, []);\n\n  let style: React.CSSProperties = {\n    // Reset padding so that relative positioning works correctly. Padding will be done in JS layout.\n    padding: 0,\n    ...otherProps.style\n  };\n\n  if (scrollDirection === 'horizontal') {\n    style.overflowX = 'auto';\n    style.overflowY = 'hidden';\n  } else if (scrollDirection === 'vertical' || contentSize.width === state.width) {\n    // Set overflow-x: hidden if content size is equal to the width of the scroll view.\n    // This prevents horizontal scrollbars from flickering during resizing due to resize observer\n    // firing slower than the frame rate, which may cause an infinite re-render loop.\n    style.overflowY = 'auto';\n    style.overflowX = 'hidden';\n  } else {\n    style.overflow = 'auto';\n  }\n\n  innerStyle = {\n    width: contentSize.width,\n    height: contentSize.height,\n    pointerEvents: isScrolling ? 'none' : 'auto',\n    position: 'relative',\n    ...innerStyle\n  };\n\n  return (\n    <div {...otherProps} style={style} ref={ref} onScroll={onScroll}>\n      <div role=\"presentation\" style={innerStyle}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst ScrollViewForwardRef = React.forwardRef(ScrollView);\nexport {ScrollViewForwardRef as ScrollView};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/bvaughn/react-window/blob/master/src/createGridComponent.js\n\n// According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nexport function getScrollLeft(node: Element, direction: Direction): number {\n  let {scrollLeft} = node;\n\n  // scrollLeft in rtl locales differs across browsers, so normalize.\n  // See comment by getRTLOffsetType below for details.\n  if (direction === 'rtl') {\n    let {scrollWidth, clientWidth} = node;\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-descending':\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n    }\n  }\n\n  return scrollLeft;\n}\n\nexport function setScrollLeft(node: Element, direction: Direction, scrollLeft: number) {\n  if (direction === 'rtl') {\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-ascending':\n        break;\n      default: {\n        const {clientWidth, scrollWidth} = node;\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n      }\n    }\n  }\n\n  node.scrollLeft = scrollLeft;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {LayoutInfo} from '@react-stately/virtualizer';\nimport React, {CSSProperties, ReactNode, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useVirtualizerItem, VirtualizerItemOptions} from './useVirtualizerItem';\n\ninterface VirtualizerItemProps extends Omit<VirtualizerItemOptions, 'ref'> {\n  parent?: LayoutInfo,\n  className?: string,\n  children: ReactNode\n}\n\nexport function VirtualizerItem(props: VirtualizerItemProps) {\n  let {className, layoutInfo, virtualizer, parent, children} = props;\n  let {direction} = useLocale();\n  let ref = useRef();\n  useVirtualizerItem({\n    layoutInfo,\n    virtualizer,\n    ref\n  });\n\n  return (\n    <div role=\"presentation\" ref={ref} className={className} style={layoutInfoToStyle(layoutInfo, direction, parent)}>\n      {children}\n    </div>\n  );\n}\n\nlet cache = new WeakMap();\nexport function layoutInfoToStyle(layoutInfo: LayoutInfo, dir: Direction, parent?: LayoutInfo | null): CSSProperties {\n  let xProperty = dir === 'rtl' ? 'right' : 'left';\n  let cached = cache.get(layoutInfo);\n  if (cached && cached[xProperty] != null) {\n    if (!parent) {\n      return cached;\n    }\n\n    // Invalidate if the parent position changed.\n    let top = layoutInfo.rect.y - parent.rect.y;\n    let x = layoutInfo.rect.x - parent.rect.x;\n    if (cached.top === top && cached[xProperty] === x) {\n      return cached;\n    }\n  }\n\n  let style: CSSProperties = {\n    position: layoutInfo.isSticky ? 'sticky' : 'absolute',\n    // Sticky elements are positioned in normal document flow. Display inline-block so that they don't push other sticky columns onto the following rows.\n    display: layoutInfo.isSticky ? 'inline-block' : undefined,\n    overflow: layoutInfo.allowOverflow ? 'visible' : 'hidden',\n    top: layoutInfo.rect.y - (parent ? parent.rect.y : 0),\n    [xProperty]: layoutInfo.rect.x - (parent ? parent.rect.x : 0),\n    transition: 'all',\n    WebkitTransition: 'all',\n    WebkitTransitionDuration: 'inherit',\n    transitionDuration: 'inherit',\n    width: layoutInfo.rect.width,\n    height: layoutInfo.rect.height,\n    opacity: layoutInfo.opacity,\n    zIndex: layoutInfo.zIndex,\n    transform: layoutInfo.transform,\n    contain: 'size layout style'\n  };\n\n  cache.set(layoutInfo, style);\n  return style;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {LayoutInfo, Size} from '@react-stately/virtualizer';\nimport {RefObject, useCallback} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface IVirtualizer {\n  updateItemSize(key: Key, size: Size): void\n}\n\nexport interface VirtualizerItemOptions {\n  layoutInfo: LayoutInfo,\n  virtualizer: IVirtualizer,\n  ref: RefObject<HTMLElement>\n}\n\nexport function useVirtualizerItem(options: VirtualizerItemOptions) {\n  let {layoutInfo, virtualizer, ref} = options;\n\n  let updateSize = useCallback(() => {\n    let size = getSize(ref.current);\n    virtualizer.updateItemSize(layoutInfo.key, size);\n  }, [virtualizer, layoutInfo.key, ref]);\n\n  useLayoutEffect(() => {\n    if (layoutInfo.estimatedSize) {\n      updateSize();\n    }\n  });\n\n  return {updateSize};\n}\n\nfunction getSize(node: HTMLElement) {\n  // Reset height before measuring so we get the intrinsic size\n  let height = node.style.height;\n  node.style.height = '';\n  let size = new Size(node.scrollWidth, node.scrollHeight);\n  node.style.height = height;\n  return size;\n}\n"],"names":[],"version":3,"file":"main.js.map"}