"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*************************************************************************
 * Copyright 2022 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
const component_1 = __importStar(require("../component"));
const Global_1 = __importDefault(require("../src/Global"));
describe('component.ts', () => {
    const componentMock = {
        close: (data) => ({ data }),
        isComponent: () => true,
        open: (component, data) => Promise.resolve({ component, data })
    };
    beforeEach(() => {
        Global_1.default['exc-module-runtime'] = {
            component: () => componentMock
        };
    });
    it('can close()', () => {
        const spy = jest.spyOn(componentMock, 'close');
        component_1.default.close();
        expect(spy).toHaveBeenCalled();
    });
    it('can close(data)', () => {
        const spy = jest.spyOn(componentMock, 'close');
        component_1.default.close({ data: 'test' });
        expect(spy).toHaveBeenCalledWith({ data: 'test' });
    });
    it('can isComponent()', () => {
        const spy = jest.spyOn(componentMock, 'isComponent');
        component_1.default.isComponent();
        expect(spy).toHaveBeenCalled();
    });
    it('can open(component)', () => {
        const spy = jest.spyOn(componentMock, 'open');
        component_1.default.open(component_1.COMPONENT.EMAIL_DESIGNER);
        expect(spy).toHaveBeenCalledWith(component_1.COMPONENT.EMAIL_DESIGNER, undefined);
    });
    it('can open(component, data)', () => {
        const spy = jest.spyOn(componentMock, 'open');
        component_1.default.open(component_1.COMPONENT.EMAIL_DESIGNER, { abc: 'def' });
        expect(spy).toHaveBeenCalledWith(component_1.COMPONENT.EMAIL_DESIGNER, { abc: 'def' });
    });
});
//# sourceMappingURL=component.test.js.map