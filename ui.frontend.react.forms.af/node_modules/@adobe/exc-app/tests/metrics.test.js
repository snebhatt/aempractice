"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
const Global_1 = __importDefault(require("../src/Global"));
const metrics_1 = __importStar(require("../metrics"));
describe('metrics/index.js', () => {
    const expectedInstance = {};
    beforeEach(() => {
        Global_1.default['exc-module-runtime'] = {
            metrics: {
                create: name => {
                    console.log(name); // eslint-disable-line no-console
                    return expectedInstance;
                }
            }
        };
    });
    it('correctly sets up the connection with module-runtime', () => {
        const createSpy = jest.spyOn(Global_1.default['exc-module-runtime'].metrics, 'create');
        const actualInstance = metrics_1.default.create('component_name');
        expect(createSpy).toBeCalledTimes(1);
        expect(createSpy).toBeCalledWith('component_name');
        expect(actualInstance).toBe(expectedInstance);
    });
    it('exports Levels and Events', () => {
        expect(metrics_1.Level).toEqual({ DEBUG: 'DEBUG', ERROR: 'ERROR', INFO: 'INFO', TRACE: 'TRACE', WARN: 'WARN' });
        expect(metrics_1.Events).toEqual({
            PAGE_LOAD_DONE: 'exc.metrics.pageState.load.done',
            PAGE_LOAD_START: 'exc.metrics.pageState.load.start',
            SPINNER_DONE: 'exc.metrics.pageState.spinner.done',
            SPINNER_START: 'exc.metrics.pageState.spinner.start'
        });
    });
});
//# sourceMappingURL=metrics.test.js.map