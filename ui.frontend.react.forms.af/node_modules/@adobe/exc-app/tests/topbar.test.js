"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
const Global_1 = __importDefault(require("../src/Global"));
const topbar_1 = __importDefault(require("../topbar"));
describe('topbar/index.js', () => {
    beforeEach(() => {
        Global_1.default['exc-module-runtime'] = {
            topbar: {
                customEnvLabel: 'Test',
                onHeroClick: (callback) => {
                    console.log(callback); // eslint-disable-line no-console
                },
                setCustomSearch: (config) => {
                    console.log(config); // eslint-disable-line no-console
                },
                setFeedbackButton: (config) => {
                    console.log(config); // eslint-disable-line no-console
                },
                solution: {
                    icon: 'AdobeExperienceCloud',
                    shortTitle: 'AEC',
                    title: 'Adobe Experience Cloud22'
                },
                workspaces: [{ name: 'Workspace', url: '/workspace' }]
            }
        };
    });
    it('correctly sets up the connection with module-runtime', () => {
        expect(true).toEqual(true);
        const searchCallback = jest.fn();
        const setCustomSearchSpy = jest.spyOn(Global_1.default['exc-module-runtime'].topbar, 'setCustomSearch');
        topbar_1.default.setCustomSearch({ callback: searchCallback, enabled: true, open: false });
        expect(setCustomSearchSpy).toBeCalledTimes(1);
        expect(topbar_1.default.solution).toStrictEqual({
            icon: 'AdobeExperienceCloud',
            shortTitle: 'AEC',
            title: 'Adobe Experience Cloud22'
        });
        const newConfig = {
            icon: 'AdobeExample',
            shortTitle: 'AEC',
            title: 'Example Solution'
        };
        topbar_1.default.solution = newConfig;
        expect(Global_1.default['exc-module-runtime'].topbar.solution).toStrictEqual(newConfig);
        expect(topbar_1.default.customEnvLabel).toBe('Test');
        topbar_1.default.customEnvLabel = 'Beta';
        expect(Global_1.default['exc-module-runtime'].topbar.customEnvLabel).toBe('Beta');
        expect(topbar_1.default.workspaces).toStrictEqual([{ name: 'Workspace', url: '/workspace' }]);
        topbar_1.default.workspaces = [{ name: 'New Workspace', url: '/newWorkspace' }];
        expect(Global_1.default['exc-module-runtime'].topbar.workspaces).toStrictEqual([{ name: 'New Workspace', url: '/newWorkspace' }]);
        expect(typeof topbar_1.default.onHeroClick).toBe('function');
        const newCallback = () => { };
        const heroClickSpy = jest.spyOn(Global_1.default['exc-module-runtime'].topbar, 'onHeroClick');
        topbar_1.default.onHeroClick(newCallback);
        expect(heroClickSpy).toBeCalledWith(newCallback);
        const feedbackCallback = jest.fn();
        const feedbackButtonSpy = jest.spyOn(Global_1.default['exc-module-runtime'].topbar, 'setFeedbackButton');
        topbar_1.default.setFeedbackButton({ buttonLabel: 'Beta Feedback', callback: feedbackCallback, enabled: true, type: 'custom' });
        topbar_1.default.setFeedbackButton({ buttonLabel: 'Beta Feedback', enabled: true, subject: 'Subject', type: 'openFeedback' });
        topbar_1.default.setFeedbackButton({ buttonLabel: 'Beta Feedback', enabled: true, type: 'external', url: 'http://example.com' });
        expect(feedbackButtonSpy).toBeCalledTimes(3);
    });
});
//# sourceMappingURL=topbar.test.js.map