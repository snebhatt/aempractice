"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
const Global_1 = __importDefault(require("../src/Global"));
const page_1 = __importDefault(require("../page"));
describe('page/index.js', () => {
    beforeEach(() => {
        Global_1.default['exc-module-runtime'] = {
            page: {
                appContainer: 'testContainer',
                blockNavigation: (enabled, options) => {
                    console.log(enabled, options); // eslint-disable-line no-console
                },
                done: () => { },
                favicon: 'test.ico',
                generateShellUrl: (location, newApp) => {
                    console.log(location, newApp); // eslint-disable-line no-console
                },
                iframeReload: () => { },
                modal: true,
                notFound: () => { },
                preventDefaultCombos: [{ ctrlKey: true, key: 'A' }],
                shellRedirect: (path, options) => {
                    console.log(path, options); // eslint-disable-line no-console
                },
                spinner: true,
                title: 'test title',
                unloadPromptMessage: 'Are you sure?'
            }
        };
    });
    it('correctly sets up the connection with module-runtime', () => {
        const doneSpy = jest.spyOn(Global_1.default['exc-module-runtime'].page, 'done');
        page_1.default.done();
        expect(doneSpy).toBeCalledTimes(1);
        expect(page_1.default.appContainer).toBe('testContainer');
        page_1.default.appContainer = 'testingContainer';
        expect(Global_1.default['exc-module-runtime'].page.appContainer).toBe('testingContainer');
        const notFoundSpy = jest.spyOn(Global_1.default['exc-module-runtime'].page, 'notFound');
        page_1.default.notFound();
        expect(notFoundSpy).toBeCalledTimes(1);
        expect(page_1.default.favicon).toBe('test.ico');
        page_1.default.favicon = 'updated.ico';
        expect(Global_1.default['exc-module-runtime'].page.favicon).toBe('updated.ico');
        const iframeReloadSpy = jest.spyOn(Global_1.default['exc-module-runtime'].page, 'iframeReload');
        page_1.default.iframeReload();
        expect(iframeReloadSpy).toBeCalledTimes(1);
        expect(iframeReloadSpy).toBeCalledWith();
        page_1.default.iframeReload(false);
        expect(iframeReloadSpy).toBeCalledTimes(2);
        expect(iframeReloadSpy).toBeCalledWith(false);
        const generateShellUrlSpy = jest.spyOn(Global_1.default['exc-module-runtime'].page, 'generateShellUrl');
        page_1.default.generateShellUrl({ path: '/path' }, false);
        expect(generateShellUrlSpy).toBeCalledTimes(1);
        expect(generateShellUrlSpy).toBeCalledWith({ path: '/path' }, false);
        page_1.default.generateShellUrl({ path: '/path', sandbox: 'sbox' }, false);
        expect(generateShellUrlSpy).toBeCalledWith({ path: '/path', sandbox: 'sbox' }, false);
        expect(page_1.default.modal).toBe(true);
        page_1.default.modal = false;
        expect(Global_1.default['exc-module-runtime'].page.modal).toBe(false);
        expect(page_1.default.preventDefaultCombos.length).toBe(1);
        expect(page_1.default.preventDefaultCombos[0].key).toBe('A');
        page_1.default.preventDefaultCombos = [{ ctrlKey: true, key: 'A' }, { altKey: false, key: 'B' }];
        expect(Global_1.default['exc-module-runtime'].page.preventDefaultCombos.length).toBe(2);
        expect(page_1.default.preventDefaultCombos[1].key).toBe('B');
        const shellRedirectSpy = jest.spyOn(Global_1.default['exc-module-runtime'].page, 'shellRedirect');
        page_1.default.shellRedirect('test path');
        expect(shellRedirectSpy).toBeCalledTimes(1);
        expect(shellRedirectSpy).toBeCalledWith('test path');
        page_1.default.shellRedirect('new path', { discovery: true });
        expect(shellRedirectSpy).toBeCalledTimes(2);
        expect(shellRedirectSpy).toBeCalledWith('new path', { discovery: true });
        page_1.default.shellRedirect('new path', { replace: false });
        expect(shellRedirectSpy).toBeCalledTimes(3);
        expect(shellRedirectSpy).toBeCalledWith('new path', { replace: false });
        expect(page_1.default.spinner).toBe(true);
        page_1.default.spinner = false;
        expect(Global_1.default['exc-module-runtime'].page.spinner).toBe(false);
        expect(page_1.default.title).toBe('test title');
        page_1.default.title = 'updated title';
        expect(Global_1.default['exc-module-runtime'].page.title).toBe('updated title');
        const blockNavSpy = jest.spyOn(Global_1.default['exc-module-runtime'].page, 'blockNavigation');
        page_1.default.blockNavigation(true);
        expect(blockNavSpy).toBeCalledTimes(1);
        expect(page_1.default.unloadPromptMessage).toBe('Are you sure?');
        page_1.default.unloadPromptMessage = 'But are you sure you are sure?';
        expect(Global_1.default['exc-module-runtime'].page.unloadPromptMessage).toBe('But are you sure you are sure?');
    });
});
//# sourceMappingURL=page.test.js.map