"use strict";
/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
const Global_1 = require("./src/Global");
const user = {
    authExpired: () => {
        return (0, Global_1.getImpl)('user')().authExpired();
    },
    emit: (type, evt) => {
        return (0, Global_1.getImpl)('user')().emit(type, evt);
    },
    generateSubOrg: (productContext, overrides) => {
        return (0, Global_1.getImpl)('user')().generateSubOrg(productContext, overrides);
    },
    get: params => {
        return (0, Global_1.getImpl)('user')().get(params);
    },
    getCustomToken: (ims) => {
        return (0, Global_1.getImpl)('user')().getCustomToken(ims);
    },
    getFulfillableItems: (serviceCode) => {
        return (0, Global_1.getImpl)('user')().getFulfillableItems(serviceCode);
    },
    off: (type, handler) => {
        return (0, Global_1.getImpl)('user')().off(type, handler);
    },
    on: (type, handler) => {
        return (0, Global_1.getImpl)('user')().on(type, handler);
    }
};
Object.defineProperty(user, 'logoutUrl', {
    get: () => {
        return (0, Global_1.getImpl)('user')().logoutUrl;
    },
    set: (value) => {
        (0, Global_1.getImpl)('user')().logoutUrl = value;
    }
});
Object.defineProperty(user, 'showLanguagePicker', {
    get: () => {
        return (0, Global_1.getImpl)('user')().showLanguagePicker;
    },
    set: (value) => {
        (0, Global_1.getImpl)('user')().showLanguagePicker = value;
    }
});
Object.defineProperty(user, 'showRolesPicker', {
    get: () => {
        return (0, Global_1.getImpl)('user')().showRolesPicker;
    },
    set: (value) => {
        (0, Global_1.getImpl)('user')().showRolesPicker = value;
    }
});
exports.default = user;
//# sourceMappingURL=user.js.map