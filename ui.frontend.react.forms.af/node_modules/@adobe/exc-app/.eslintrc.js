/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
const OFF = 0;
const WARN = 1;
const ERROR = 2;
let path = require('path');
let rulesDirPlugin = require('eslint-plugin-rulesdir');
rulesDirPlugin.RULES_DIR = path.join(__dirname, 'bin');

module.exports = {
  extends: ['eslint:recommended', 'plugin:@typescript-eslint/recommended'],
  plugins: ['header', 'import', 'jsdoc', 'prettier', 'rulesdir', '@typescript-eslint'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    sourceType: 'module'
  },
  env: {
    browser: true,
    es6: true,
    mocha: true,
    node: true
  },
  settings: {
    jsdoc: {
      tagNamePreference: {
        access: false
      }
    }
  },
  overrides: [
    {
      files: [
        'appapi.ts',
        'capabilityapi.ts'
      ],
      rules: {
        '@typescript-eslint/no-duplicate-enum-values': 'OFF'
      }
    }
  ],
  rules: {
    'comma-dangle': ERROR,
    'comma-spacing': ERROR,
    curly: [ERROR, 'all'],
    'eol-last': [ERROR, 'always'],
    eqeqeq: [ERROR, 'smart'],
    'header/header': [ERROR, 'block', [
      '************************************************************************',
      {'pattern': ' \\* Copyright \\d{4} Adobe'},
      ' * All Rights Reserved.',
      ' *',
      ' * NOTICE: Adobe permits you to use, modify, and distribute this file in',
      ' * accordance with the terms of the Adobe license agreement accompanying',
      ' * it. If you have received this file from a source other than Adobe,',
      ' * then your use, modification, or distribution of it requires the prior',
      ' * written permission of Adobe.',
      ' *************************************************************************']
    ],
    indent: [ERROR, 2, {SwitchCase: 1}],
    'import/no-extraneous-dependencies': ERROR,
    'key-spacing': [ERROR, {afterColon: true, beforeColon: false}],
    'keyword-spacing': ERROR,
    'max-len': [WARN, {code: 150, comments: 100, tabWidth: 2}],
    'no-case-declarations': WARN,
    'no-console': ERROR,
    'no-multiple-empty-lines': [ERROR, {max: 1, maxBOF: 0, maxEOF: 1}],
    'no-trailing-spaces': ERROR,
    'object-curly-spacing': [ERROR, 'never'],
    'object-shorthand': [ERROR, 'properties'],
    'quote-props': [ERROR, 'as-needed'],
    quotes: [ERROR, 'single', {allowTemplateLiterals: true}],
    'no-restricted-imports': [ERROR, {
      patterns: [{
        group: ['@exc/**'],
        message: 'Dont do that please'
      }]
    }],
    'sort-keys': [ERROR, 'asc', {caseSensitive: false}],
    'space-before-blocks': ERROR,
    'space-infix-ops': ERROR,
    'space-in-parens': [ERROR, 'never'],

    // JSDoc
    "jsdoc/check-alignment": ERROR,
    "jsdoc/check-indentation": ERROR,
    "jsdoc/check-param-names": ERROR,
    "jsdoc/check-property-names": ERROR,
    "jsdoc/check-syntax": ERROR,
    "jsdoc/check-tag-names": [ERROR, {definedTags: ['category', 'packageDocumentation', 'preferred']}],
    "jsdoc/empty-tags": ERROR,
    "jsdoc/no-types": ERROR,
    "jsdoc/require-description-complete-sentence": OFF, // WARN,
    "jsdoc/require-description": ERROR,
    "jsdoc/require-jsdoc": OFF, // WARN
    "jsdoc/require-param-description": ERROR,
    "jsdoc/require-param-name": ERROR,
    "jsdoc/require-param": ERROR,
    "jsdoc/require-returns-check": ERROR,
    "jsdoc/require-returns-description": ERROR,
    "jsdoc/require-returns": ERROR,

    // TypeScript
    "@typescript-eslint/no-explicit-any": OFF,
    "@typescript-eslint/semi": ["error"],
    "semi": "off",

    // custom rules
    'rulesdir/sort-imports': [ERROR]
  }
};
