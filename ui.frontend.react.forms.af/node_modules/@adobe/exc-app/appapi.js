"use strict";
/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppIds = void 0;
/**
 * The App API provides auxiliary APIs to fetch certain data types.
 *
 * ***Import:***
 *
 * ```typescript
 * import appApi from '@adobe/exc-app/appapi';
 * ```
 *
 * ***Default export:***
 *
 * [AppApi](../interfaces/app.appapi.md#interface-appapi)
 *
 * ***Usage:***
 * These APIs return promises, not properties, and will need to be
 * asynchronously loaded by calling `get`.
 *
 * ```typescript
 * const [analytics, ddam, target] = await Promise.all([
 *   appApi.get('analytics'),
 *   appApi.get('ddam'),
 *   appApi.get('target')
 * ]);
 *
 * ```
 *
 * API for fetching app data.
 * @packageDocumentation
 * @module appapi
 */
const Global_1 = require("./src/Global");
// This list is dynamically generated in the preBuild step
var AppIds;
(function (AppIds) {
    AppIds["ADMIN"] = "admin";
    AppIds["ADMIN_CONSOLE"] = "adminconsole";
    AppIds["ADOBE_EXPERIENCE_CLOUD_GRIFFON"] = "griffon";
    AppIds["ADVERTISING_CLOUD"] = "adcloud";
    AppIds["ANALYTICS"] = "analytics";
    AppIds["APP_BUILDER_CATALOG"] = "firefly";
    AppIds["ASSETS"] = "assets";
    AppIds["ASSETS_ESSENTIALS"] = "ddam";
    AppIds["AUDIENCE_MANAGER"] = "audiencemanager";
    AppIds["CAMPAIGN"] = "campaignLaunch";
    AppIds["CAMPAIGN_CONTROL_PANEL"] = "accp";
    AppIds["CLOUD_MANAGER"] = "cloudManagerUi";
    AppIds["COMMERCE"] = "commerceInstanceDiscovery";
    AppIds["CONTENT_HUB"] = "contentHub";
    AppIds["CONVERSATIONAL_EXPERIENCE"] = "conversationalexperience";
    AppIds["CUSTOMER_JOURNEY_ANALYTICS"] = "platformAnalytics";
    AppIds["CUSTOMER_JOURNEY_MANAGEMENT"] = "cjm-home";
    AppIds["DATA_COLLECTION"] = "launchDataCollection";
    AppIds["DYNAMIC_CHAT"] = "hummingbird";
    AppIds["EXCHANGE"] = "exchange";
    AppIds["EXPERIENCE_CLOUD"] = "landing";
    AppIds["EXPERIENCE_MANAGER"] = "experienceManagerUI";
    AppIds["EXPERIENCE_MANAGER_AEMGENERATEVARIATIONS"] = "aemGenerateVariations";
    AppIds["EXPERIENCE_MANAGER_AEMSHELL"] = "aemshell";
    AppIds["EXPERIENCE_MANAGER_AEMXMNGR"] = "aemxmngr";
    AppIds["EXPERIENCE_MANAGER_AEM_CF_ADMIN"] = "aem-cf-admin";
    AppIds["EXPERIENCE_MANAGER_AEM_CF_EDITOR"] = "aem-cf-editor";
    AppIds["EXPERIENCE_MANAGER_AEM_MIGRATION"] = "aem-migration";
    AppIds["EXPERIENCE_MANAGER_ASSETS"] = "ddam";
    AppIds["EXPERIENCE_MANAGER_SCREENS"] = "screens";
    AppIds["EXPERIENCE_PLATFORM"] = "experiencePlatformUI";
    AppIds["HEADLESS_CMS"] = "hcms";
    AppIds["JOURNEY_OPTIMIZER"] = "cjm-home";
    AppIds["JOURNEY_ORCHESTRATION"] = "journeys";
    AppIds["LAUNCH_IMPLEMENT"] = "implement";
    AppIds["MARKETO"] = "marketo";
    AppIds["MARKETO_ENGAGE"] = "marketoEngage";
    AppIds["MARKETO_MEASURE"] = "bizible";
    AppIds["MIX_MODELER"] = "adobemixmodeler";
    AppIds["OFFERS"] = "offers";
    AppIds["PEOPLE"] = "people";
    AppIds["PERMISSIONS"] = "permissionsUI";
    AppIds["PRIMETIME"] = "primetime";
    AppIds["PRIVACY_UI"] = "privacyui";
    AppIds["PROJECT_HUMMINGBIRD"] = "hummingbird";
    AppIds["PROJECT_SAPPHIRE"] = "sapphireUI";
    AppIds["PROJECT_SIERRA"] = "cjm-home";
    AppIds["SEARCH_SOCIAL_COMMERCE"] = "advertising-ssc";
    AppIds["SOFTWARE_DISTRIBUTION"] = "softwareDistribution";
    AppIds["SYSTEM_STATUS"] = "systemStatus";
    AppIds["TARGET"] = "target";
    AppIds["TRIGGERS"] = "triggers";
    AppIds["WORKFRONT"] = "workfront";
    AppIds["WORKFRONT_FUSION"] = "fusion";
})(AppIds = exports.AppIds || (exports.AppIds = {}));
const appapi = {
    get: params => {
        return (0, Global_1.getImpl)('appApi')().get(params);
    }
};
exports.default = appapi;
//# sourceMappingURL=appapi.js.map