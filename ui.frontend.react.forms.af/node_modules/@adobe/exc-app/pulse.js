"use strict";
/*************************************************************************
 * Copyright 2020 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 **************************************************************************/
/**
 * APIs that let solutions interact with Pulse, Adobe's Notification System.
 *
 * ***Import:***
 *
 * ```typescript
 * import pulse from '@adobe/exc-app/pulse';
 * ```
 *
 * ***Default export:***
 *
 * [PulseApi](../interfaces/pulse.pulseapi.md#interface-pulserapi)
 *
 * ***Usage:***
 *
 * ```typescript
 * import pulse, {NotificationType} from '@adobe/exc-app/pulse';
 *
 * pulse.send([{
 *   groupIds: [],
 *   messageType: NotificationType.UPDATES_ON_SUBSCRIBED_OBJECT,
 *   metadata: {priority: 'low'},
 *   sendToOrg: false,
 *   templateParams: {message: 'System shared Asset shared'},
 *   userIds: []
 * }]);
 * ```
 *
 * API for sending pulse notifications.
 * @packageDocumentation
 * @module pulse
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationType = void 0;
const Global_1 = require("./src/Global");
/**
 * @ignore
 */
var NotificationType;
(function (NotificationType) {
    /**
     * Request for approval of a resource.
     */
    NotificationType["APPROVAL_REQUEST"] = "approval_request";
    /**
     * Acceptance or rejection of an approval request.
     */
    NotificationType["APPROVAL_REQUEST_ACTION"] = "approval_request_action";
    /**
     * Request for access.
     */
    NotificationType["ACCESS_REQUEST"] = "access_request";
    /**
     * Acceptance or rejection of an access request.
     */
    NotificationType["ACCESS_REQUEST_ACTION"] = "access_request_action";
    /**
     * Assignment notification.
     */
    NotificationType["ASSIGNED"] = "assigned";
    /**
     * Sharing notification.
     */
    NotificationType["SHARED"] = "shared";
    /**
     * Mentions notification.
     */
    NotificationType["MENTIONS"] = "mentions";
    /**
     * Update notification.
     */
    NotificationType["UPDATES_ON_SUBSCRIBED_OBJECT"] = "updates_on_subscribed_object";
    /**
     * Notification for completion with errors.
     */
    NotificationType["ERROR_COMPLETED_WITH_ERRORS"] = "completed_with_errors";
    /**
     * Notification for failure with errors.
     */
    NotificationType["ERROR_FAILED_WITH_ERRORS"] = "failed_with_errors";
    /**
     * Error default message.
     */
    NotificationType["ERROR_DEFAULT_MESSAGE"] = "errors_default_message";
    /**
     * Other notification.
     */
    NotificationType["OTHERS"] = "others";
})(NotificationType = exports.NotificationType || (exports.NotificationType = {}));
const pulse = {
    send: params => {
        return (0, Global_1.getImpl)('pulse')().send(params);
    },
    setButton: (buttonConfig) => {
        return (0, Global_1.getImpl)('pulse')().setButton(buttonConfig);
    },
    setCount: (count) => {
        return (0, Global_1.getImpl)('pulse')().setCount(count);
    }
};
exports.default = pulse;
//# sourceMappingURL=pulse.js.map